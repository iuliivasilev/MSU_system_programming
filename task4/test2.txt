int MoveRight(int a.){
    int c = 2.
      while ((a!=23)and(a!=2)and (a!=c)) do {
          Right.
          Take(a).
          if (a == 0) {Setbomb.either Up. or {Down. c = 24.}}
      }
    Setbomb.
    return a.
}
int MoveLeft(int a.){
    int c = 1.
    while ((a!=14) and (a!=1)and (a!=c)) do {
        Left.
        Take(a).
        if (a == 0) {
            Setbomb.
            either {Up.c=13.} 
            or Down.
        }
    }
    Setbomb.
    return a.
}
int MoveDown(int a.){
    int c = 4.
      while ((a!=24)and (a!=4)and (a!=c)) do {
          Down.
          Take(a).
          if (a == 0) {Setbomb.either Right. or {Left.c = 14.}}
      }
    Setbomb.
    return a.
}
int MoveUp(int a.){
    int c = 3.
    while ((a!=13)and(a!=3)and (a!=c)) do {
        Up.
        Take(a).
        if (a == 0) {
            Setbomb.
            either {Right.c=23.} 
            or Left.
        }
    }
    Setbomb.
    return a.
}
int Start() { [1 -left of map, 2 -  right of map, 3 - top of map, 4 - bottom of map.]
 int a = 0,c.
 bool b=true.
 Take (a).
 if (a == 13)while(true) do {
      a = MoveRight(a).
      a = MoveDown(a).
      a = MoveLeft(a).
      a = MoveUp(a).
 }else 
 if (a == 23)while(true) do {
      a = MoveDown(a).
      a = MoveLeft(a).
      a = MoveUp(a).
      a = MoveRight(a).
 }else 
 if (a == 24)while(true) do {      
      a = MoveLeft(a).
      a = MoveUp(a).
      a = MoveRight(a).
      a = MoveDown(a).
 }else 
 if (a == 14)while(true) do { 
      a = MoveUp(a).
      a = MoveRight(a).
      a = MoveDown(a).
      a = MoveLeft(a).
 }
 return 1.
}
